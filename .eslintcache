[{"C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\reportWebVitals.js":"1","C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\App.js":"2","C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\reducers\\emp_reducer.js":"3","C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\index.js":"4","C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\data\\mock_data.js":"5","C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\components\\employee\\employee_list.js":"6","C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\components\\login\\login-form.js":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":389,"mtime":1606226756563,"results":"10","hashOfConfig":"9"},{"size":209,"mtime":1606225910308,"results":"11","hashOfConfig":"9"},{"size":656,"mtime":1606221476692,"results":"12","hashOfConfig":"9"},{"size":1097,"mtime":1606219692199,"results":"13","hashOfConfig":"9"},{"size":1127,"mtime":1606225268726,"results":"14","hashOfConfig":"9"},{"size":1717,"mtime":1606226663521,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ovbuzw",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\reportWebVitals.js",[],"C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\App.js",[],"C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\reducers\\emp_reducer.js",[],"C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\index.js",[],"C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\data\\mock_data.js",[],"C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\components\\employee\\employee_list.js",["31"],"C:\\Users\\madir\\OneDrive\\Desktop\\react_practice\\emp_list\\src\\components\\login\\login-form.js",["32","33","34"],"import React , {useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './login.css';\r\n\r\n\r\nfunction LoginForm() {\r\n\r\n    const [details,setDetails] = useState({username:\"\",password:\"\"});\r\n    const [error,setError] = useState({error:\"\"});\r\n    const creds = useSelector(state => state.creds);\r\n    const history = useHistory();\r\n    const submitHandler = e => {\r\n      e.preventDefault();\r\n      if((details.username = creds.username) && (details.password == creds.password)) {\r\n        history.push('/empList');\r\n      } else {\r\n         alert(\"Invalid Details\");\r\n         setDetails({\r\n             username: \"\",\r\n             password: \"\"\r\n         })\r\n      }\r\n    }\r\n    return (\r\n       <div class=\"login\">\r\n           \r\n          <form onSubmit={submitHandler}>\r\n           <div className=\"form-inner\">\r\n               <h2>Login</h2>\r\n               <div className=\"form-group\">\r\n                   <label htmlFor=\"username\">UserName</label>\r\n                   <input type=\"text\" placeholder=\"username\" name=\"username\" id=\"username\"  value = {details.username} onChange = {e => setDetails({...details,username:e.target.value})} required/>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                   <label htmlFor=\"password\">Password</label>\r\n                   <input type=\"password\" placeholder=\"password\" name=\"password\" id=\"password\" value={details.password} onChange= {e=> setDetails({...details,password:e.target.value})} required/>\r\n               </div>\r\n               <input type=\"submit\" value=\"LOGIN\" />\r\n           </div>\r\n       </form>\r\n       </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default LoginForm;",{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":25},{"ruleId":"35","severity":1,"message":"39","line":10,"column":12,"nodeType":"37","messageId":"38","endLine":10,"endColumn":17},{"ruleId":"35","severity":1,"message":"40","line":10,"column":18,"nodeType":"37","messageId":"38","endLine":10,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":15,"column":67,"nodeType":"43","messageId":"44","endLine":15,"endColumn":69},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]